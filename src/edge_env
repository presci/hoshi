#!/bin/bash



start_app=5

WARP_CFG=$(( 5 + 0 ))
PVP_SELECT_CFG=$(( 9 + 0 ))


pvp_sel_x=$(( 703 + 0 ))
pvp_sel_y=$(( 372 + 0 ))





# troops deployment/attack points
point_a_x=153
point_a_y=409
point_b_x=563
point_b_y=535
point_c_x=535
point_c_y=500


marines_x=258
marines_y=567
rhinos_x=458
rhinos_y=567
bomba_x=558
bomba_y=567


RANDOM_dev=`source ./rangen 9 14`
RANDOM_MARINES=`source ./rangen 25 35`
RANDOM_BOMBAS=`source ./rangen 18 25`
RANDOM_RHINOS=`source ./rangen 18 25`
FACTION_SLEEP=$(( 10 + 0 ))


dev_sleep=1
SELECT_SLEEP=6



gohome (){
    xdotool mousemove --sync $faction_init_x $faction_init_y
    sleep 2;
}

isTerminateOk(){
	TERMINATE=$(( $TERMINATE + 1 ))
	printf "Terminate: %02d\n" $TERMINATE
	if [ $TERMINATE -gt 10 ]
	    then
	    printf "No lvl up so exiting the script\n"
	    exit 0
	fi
}


check_lvl_up(){
local lvl_up_dt=$(date '+%H')
    xdotool mousemove --sync $lvl_x $lvl_y
    color=$( ./getcolor.py $lvl_x $lvl_y 1 )
    printf "lvl up color $color -- %03d %03d\n" $lvl_x $lvl_y
    if [ $color -eq $ZERO ]
    then
	echo "Lvledup$lvl_up_dt"
	xdotool click 1
	TERMINATE=$(( 0 + 0 ))
	sleep 3
    else
	isTerminateOk
    fi
}

check_red_flag (){
local red_x=$1
local red_y=$2
xdotool mousemove --sync $red_x $red_y 
color=$( ./getcolor.py $red_x $red_y 0 )
if [ $color -eq $ZERO ]
then
    xdotool click 1
    sleep 2
    printf 'check red flag lockdownlatch  %s : %02d\n' "check_red_flag"  $lockdownlatch
fi
lockdownlatch=$(( $lockdownlatch - 1 ))
}


check_flag_click (){
local flag_x=$1
local flag_y=$2
local flag_color=$3
xdotool mousemove --sync $flag_x $flag_y 
color=$( ./getcolor.py $flag_x $flag_y  $flag_color )
if [ $color -eq $ZERO ]
then
    printf 'found %s' $4
    xdotool click --delay 60 1
    return 0
else
    return 1
fi
}



move_base_left(){
local move_base_left_x=842
local move_base_left_y=540
    xdotool mousemove --sync $move_base_left_x $move_base_left_y
    xdotool mousedown  1
    sleep 1
    xdotool mousemove_relative --sync --polar 315 500
    sleep 1
    xdotool mouseup  1
    ## move_base_up
}

move_base_up(){
    xdotool mousemove --sync $point_b_x $point_b_y
    xdotool mousedown  1
    sleep 1
    xdotool mousemove_relative --sync --polar 0 300
    xdotool mouseup   1
    sleep 1
}




## -- Check for no bldg
check_no_bldg (){
local no_bldg_x=452
local no_bldg_y=402

xdotool mousemove --sync $no_bldg_x $no_bldg_y
color=$( ./getcolor.py $no_bldg_x $no_bldg_y 2 )
if [ $color -eq 0 ] 
then
    xdotool click 1
fi
xdotool mousemove --sync 455 422 && xdotool click --delay 60 1
}

#####
##### doend
doend () {
local base_attack_x=504
local base_attack_y=419


for i in {0..20}
do
sleep 2

# scout
xdotool mousemove --sync $scout_x $scout_y
color=$( ./getcolor.py $scout_x $scout_y 0 )
printf "scout color %02d : %02d\n" $color $i
if [ $color -eq $ZERO ]
then
    check_lvl_up
    printf  "scout color found %02d:%02d\n" $scout_x $scout_y
    xdotool mousemove --sync $scout_x $scout_y && xdotool click 1
    lockdownlatch=$(( 0 + 0 ))
    printf 'doend lockdownlatch %s : %02d\n' "Lockdown latch Scout dialog found" $lockdownlatch
    sleep 2
    break
fi
done
sleep 4
check_lvl_up
check_no_bldg
if [ $lockdownlatch -gt 0 ]
then
    check_red_flag 810 171 "Lockdown latch troops training found"
    check_red_flag 831 154 "research lab"
    check_red_flag 815 110 "Warp gate Flag"
fi
xdotool mousemove --sync $faction_pt_x $faction_pt_y  && xdotool click 1
sleep 4;
}




attack (){
local check_bldg_x=453
local check_bldg_y=406


    move_base_left

    xdotool mousemove --sync $dec_x $dec_y && xdotool click --repeat 13  1
    xdotool mousemove --sync $point_b_x $point_b_y && xdotool click 1
    sleep $dev_sleep;
    xdotool mousemove --sync $dev_x $dev_y && xdotool click --repeat $RANDOM_dev 1
    xdotool mousemove --sync $point_c_x $point_c_y && xdotool click 1
    sleep $FACTION_SLEEP;

}


moveA1(){
    printf "Attacking with A1\n"
    for i in {0..1} 
    do
	xdotool mousemove --sync $HOME_X $HOME_Y && xdotool click --delay 60 1
	xdotool mousemove --sync $A1_X $A1_Y && xdotool click --delay 60 1
	sleep 2
    done
sleep 2
    
}

attack_a1(){

local A1_BOMBA_X=558
local A1_BOMBA_Y=567
local A1_DEV_X=658
local A1_DEV_Y=567
local A1_BOMBAS=`source ./rangen 11 15`
local A1_DEV=`source ./rangen 10 15`
    move_base_left

    xdotool mousemove --sync $A1_BOMBA_X $A1_BOMBA_Y && xdotool click --repeat $A1_BOMBAS  1
    xdotool mousemove --sync $A1_DEV_X $A1_DEV_Y && xdotool click --repeat $A1_DEV 1
    sleep 1
    
    xdotool mousemove --sync $point_c_x $point_c_y && xdotool click 1
lockdownlatch=$(( $lockdownlatch + 1 ))
    sleep $FACTION_SLEEP;
}


##
## Select the PVP section
## if it is start refresh it
## then scout the top 3
## Attack them
##
pvp_select(){

RANDOM_dev=`source ./rangen 7 11`
dev_sleep=2 
ARG=$1

if [ -z $ARG ]
then
    printf "Missing parameter for pvp_select\n"
    return 1
fi
printf "Starting PVP $1\n"
case $ARG in
    0) 
	# 
	# Select the pvp Tab
	xdotool mousemove --sync $pvp_tab_x $pvp_tab_y && xdotool click 1
	sleep 4
	# refresh the pvp tab
	xdotool mousemove --sync $pvp_ref_x $pvp_ref_y && xdotool click 1
	sleep 6
	# Move to the last tab
	xdotool mousemove --sync $pvp_arr_x $pvp_arr_y && xdotool click --repeat 5 1

	;;
    *)
	# Move to the last tab
	xdotool mousemove --sync $pvp_arr_x $pvp_arr_y && xdotool click --repeat 5 1

	BASE_SELECT=$( echo "$ARG%2"| bc )
	if [ $BASE_SELECT -eq 0 ]
	then
	    # a1 selection y+1 and x
	    pvp_sel_y=$( echo "(($ARG/2)*$faction_rel_y)+$pvp_sel_y"|bc)
	else
	    # main base y+1 and x +1
	    pvp_sel_y=$( echo "(($ARG/2)*$faction_rel_y)+$pvp_sel_y"|bc)
	    pvp_sel_x=$( echo "$pvp_sel_x+$faction_rel_x"|bc)
	fi

esac
sleep 4
}

faction_select(){
    sleep 2;
    xdotool mousemove --sync $faction_tab_x $faction_tab_y && xdotool click 1
    sleep 2;
    
}


msg_attack() {
local online_ply_x=503
local online_ply_y=419

local shield_x=457
local shield_y=484
check_flag_click $shield_x $shield_y 2 "Player shield"
check_flag_click $online_ply_x $online_ply_y 2 "Player online"
    # xdotool mousemove --sync $shield_x $shield_y && xdotool click --delay 60 1
    # xdotool mousemove --sync  && xdotool click  --delay 60 1
}



check_pvp_ready_state(){
local x=$pvp_arr_x
local y=$pvp_arr_y
xdotool mousemove --sync $x $y
color=$( ./getcolor.py $x $y 2 )
echo $color
}



pvp_attack(){
local attk_x=$1
local attk_y=$2

if [ $lockdownlatch -gt 0 ]
then
    doend
    return 1
fi

lockdownlatch=$(( $lockdownlatch + 1 ))
printf "dostart lockdownlatch %02d\n" $lockdownlatch
    python ./getcolor.py $pvp_arr_x $pvp_arr_y 3
    resultcolor=$?
    printf  "pvp attack check %02d\n" $resultcolor
    if [ $resultcolor -eq 0 ]
    then
		xdotool mousemove --sync $pvp_sel_left_x $pvp_sel_left_y && xdotool click 1
	# select the pvp
	xdotool mousemove --sync $pvp_sel_x $pvp_sel_y && xdotool click --delay 60 1
	sleep $SELECT_SLEEP
	xdotool mousemove --sync $attk_x $attk_y  && xdotool click --delay 60 1
	sleep 2
	msg_attack
	sleep 2
	return 0
    else
	printf "error in pvp attack check\n"
	doend
	return 1
    fi
}
